extension:
  name: nanoarrow
  description: Allows the consumption and production of the Arrow Inter-Process Communication (IPC) format, both from files and directly from stream buffers.
  version: 1.2.1
  language: C++
  build: cmake
  license: MIT
  maintainers:
    - paleolimbot 
    - pdet
repo:
  github: paleolimbot/duckdb-nanoarrow
  ref: 13cacb9ef80466f40769fa165269f451c11757a2

docs:
  hello_world: |
    -- Read from an IPC file
    FROM 'arrow_file.arrow';
    FROM 'arrow_file.arrows';
    FROM read_arrow('arrow_file.arrow');

    -- Write to an IPC file
    CREATE TABLE arrow_libraries AS SELECT 'nanoarrow' as name, '0.6' as version;
    COPY arrow_libraries TO 'test.arrows' (FORMAT ARROWS, BATCH_SIZE 100);

    -- Read from a list of IPC buffer structs in the format: [{pointer,size},...]
    FROM scan_arrow_ipc([{'ptr': 2591342067712::UBIGINT, 'size': 1984::UBIGINT}])

    -- Write to buffers: This returns IPC message BLOBs and indicates which one is the header.
    FROM to_arrow_ipc((FROM arrow_libraries);


  extended_description: |
    The Arrow IPC library allows users to read and write IPC data in the Arrow format. 
    This can be done by either reading and producing `.arrow` files or by directly reading buffers using their pointers and sizes. 
    It is important to note that reading buffers is dangerous, as an incorrect pointer can crash the database system. 
    This process is temporary and will be deprecated in the future, as clients (e.g., the Python DuckDB client) will have a function that internally extracts these buffers from an Arrow stream.


